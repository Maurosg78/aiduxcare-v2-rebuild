const winston = require('winston');

const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.json()
  ),
  transports: [new winston.transports.Console()]
});

class PromptFactory {
  constructor(knowledgeBase) {
    this.knowledgeBase = knowledgeBase;
  }

  // üöÄ PROMPTS ESTRUCTURADOS V2 - OPTIMIZACI√ìN CR√çTICA PARA EVITAR TIMEOUT
  generatePrompt(transcription, specialty = 'physiotherapy', sessionType = 'initial') {
    // Obtener conocimiento espec√≠fico de la knowledge base
    const redFlags = this.getRedFlagsForSpecialty(specialty);
    const contraindicaciones = this.getContraindicationsForSpecialty(specialty);
    const terminologiaEsencial = this.getEssentialTerminologyForSpecialty(specialty);
    
    // Prompt ultra-conciso y eficiente con conocimiento especializado
    const optimizedPrompt = `Analiza esta transcripci√≥n m√©dica como FISIOTERAPEUTA EXPERTO especializado en ${specialty}.

TRANSCRIPCI√ìN:
"""
${transcription}
"""

TAREAS ESPEC√çFICAS:
1. Detecta BANDERAS ROJAS cr√≠ticas (riesgo inmediato derivaci√≥n urgente)
2. Identifica CONTRAINDICACIONES para terapia manual
3. Genera 3-5 SUGERENCIAS fisioterap√©uticas espec√≠ficas y accionables
4. Eval√∫a calidad SOAP (0-100%)

BANDERAS ROJAS CR√çTICAS A DETECTAR:
${redFlags}

CONTRAINDICACIONES ABSOLUTAS:
${contraindicaciones}

TERMINOLOG√çA CLAVE:
${terminologiaEsencial}

RESPONDE SOLO CON JSON:
{
  "warnings": [
    {
      "severity": "HIGH|MEDIUM|LOW",
      "category": "red_flag|contraindication|referral",
      "title": "T√≠tulo espec√≠fico fisioterap√©utico",
      "description": "Descripci√≥n cl√≠nica detallada desde perspectiva fisioterap√©utica",
      "action": "Acci√≥n espec√≠fica: derivaci√≥n urgente, contraindicaci√≥n tratamiento, o precauci√≥n"
    }
  ],
  "suggestions": [
    {
      "type": "assessment|treatment|education|referral",
      "title": "Sugerencia fisioterap√©utica espec√≠fica",
      "description": "Descripci√≥n pr√°ctica con terminolog√≠a de fisioterapia",
      "priority": "HIGH|MEDIUM|LOW"
    }
  ],
  "soap_quality": {
    "subjective": 85,
    "objective": 70,
    "assessment": 90,
    "plan": 80,
    "overall": 81
  }
}`;

    logger.info('üöÄ PROMPT FISIOTERAP√âUTICO V2 CALIBRADO:', {
      specialty,
      sessionType,
      transcriptionLength: transcription.length,
      promptLength: optimizedPrompt.length,
      redFlagsCount: this.getRedFlagsCount(specialty),
      terminologyCount: this.getTerminologyCount(specialty),
      hasKnowledgeBase: !!this.knowledgeBase,
      timestamp: new Date().toISOString()
    });

    return optimizedPrompt;
  }

  // Obtener banderas rojas espec√≠ficas de la knowledge base
  getRedFlagsForSpecialty(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.redFlags && this.knowledgeBase.redFlags[specialty]) {
      const redFlags = this.knowledgeBase.redFlags[specialty];
      // Seleccionar las m√°s cr√≠ticas para mantener prompt conciso
      const criticalRedFlags = redFlags.slice(0, 8); // Top 8 m√°s cr√≠ticas
      return criticalRedFlags.map(flag => `- ${flag}`).join('\n');
    }
    
    // Fallback si no hay knowledge base
    const fallbackRedFlags = {
      'physiotherapy': '- Dolor nocturno que no cede con cambios de postura\n- P√©rdida de sensibilidad en silla de montar\n- Disfunci√≥n de esf√≠nteres\n- Signos neurol√≥gicos progresivos\n- S√≠ntomas de arteria vertebral\n- Debilidad progresiva en extremidades',
      'psychology': '- Ideaci√≥n suicida/homicida\n- Psicosis activa\n- Episodio man√≠aco severo\n- Autolesiones\n- Comportamiento agresivo',
      'general': '- Dolor tor√°cico card√≠aco\n- Disnea severa\n- S√≠ntomas neurol√≥gicos focales\n- Sepsis\n- P√©rdida de conciencia'
    };
    return fallbackRedFlags[specialty] || fallbackRedFlags['general'];
  }

  // Obtener contraindicaciones espec√≠ficas de la knowledge base
  getContraindicationsForSpecialty(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.contraindications && this.knowledgeBase.contraindications.absolute) {
      const contraindications = this.knowledgeBase.contraindications.absolute;
      // Seleccionar las m√°s relevantes para fisioterapia
      const criticalContraindications = contraindications.slice(0, 6);
      return criticalContraindications.map(contra => `- ${contra}`).join('\n');
    }
    
    // Fallback
    return '- Fractura no consolidada\n- S√≠ndrome de cauda equina\n- Manipulaci√≥n con inestabilidad articular\n- Crisis inflamatoria aguda\n- Sospecha de tumor maligno\n- Mielopat√≠a cervical progresiva';
  }

  // Obtener terminolog√≠a esencial de la knowledge base
  getEssentialTerminologyForSpecialty(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.terminology && this.knowledgeBase.terminology[specialty]) {
      const terminology = this.knowledgeBase.terminology[specialty];
      // Seleccionar t√©rminos m√°s relevantes para mantener prompt conciso
      const essentialTerms = terminology.slice(0, 6);
      return essentialTerms.map(term => `- ${term.term}: ${term.definition}`).join('\n');
    }
    
    // Fallback
    return '- ROM: Rango de movimiento articular\n- Test de Las√®gue: Prueba neurol√≥gica ci√°tica\n- Control motor: Coordinaci√≥n del movimiento\n- Puntos gatillo: N√≥dulos miofasciales\n- Dolor mec√°nico: Empeora con actividad\n- Dolor inflamatorio: Rigidez matutina';
  }

  // M√©tricas para logging
  getRedFlagsCount(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.redFlags && this.knowledgeBase.redFlags[specialty]) {
      return this.knowledgeBase.redFlags[specialty].length;
    }
    return 0;
  }

  getTerminologyCount(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.terminology && this.knowledgeBase.terminology[specialty]) {
      return this.knowledgeBase.terminology[specialty].length;
    }
    return 0;
  }

  // Versi√≥n optimizada para chunking
  generateChunkPrompt(chunkText, specialty, sessionType, chunkNumber, totalChunks) {
    const redFlags = this.getRedFlagsForSpecialty(specialty);
    
    const optimizedChunkPrompt = `Analiza fragmento ${chunkNumber}/${totalChunks} de transcripci√≥n m√©dica como FISIOTERAPEUTA (${specialty}).

FRAGMENTO:
"""
${chunkText}
"""

AN√ÅLISIS PARCIAL - Solo analiza lo presente en este fragmento:
- Banderas rojas inmediatas para derivaci√≥n urgente
- Contraindicaciones para terapia manual
- Sugerencias fisioterap√©uticas espec√≠ficas para este segmento
- No asumas informaci√≥n de otros fragmentos

BANDERAS ROJAS CR√çTICAS:
${redFlags}

JSON REQUERIDO:
{
  "warnings": [{"severity": "HIGH|MEDIUM|LOW", "category": "red_flag|contraindication|referral", "title": "T√≠tulo fisioterap√©utico", "description": "Descripci√≥n cl√≠nica", "action": "Acci√≥n espec√≠fica"}],
  "suggestions": [{"type": "assessment|treatment|referral", "title": "Sugerencia fisioterap√©utica", "description": "Descripci√≥n pr√°ctica", "priority": "HIGH|MEDIUM|LOW"}],
  "fragment_analysis": {
    "fragment": "${chunkNumber}/${totalChunks}",
    "quality_score": 85,
    "completeness": "partial|complete"
  }
}`;

    logger.info('üöÄ CHUNK FISIOTERAP√âUTICO V2:', {
      chunkNumber,
      totalChunks,
      chunkLength: chunkText.length,
      promptLength: optimizedChunkPrompt.length,
      specialty,
      timestamp: new Date().toISOString()
    });

    return optimizedChunkPrompt;
  }

  // M√âTODOS LEGACY MANTENIDOS PARA COMPATIBILIDAD
  getBasePrompt() {
    return 'Asistente cl√≠nico AiDuxCare - an√°lisis fisioterap√©utico especializado';
  }

  getSpecialtyPrompt(specialty) {
    return `Especialidad: ${specialty}`;
  }

  getSessionTypePrompt(sessionType) {
    return `Tipo de sesi√≥n: ${sessionType}`;
  }

  getKnowledgePrompt(specialty) {
    if (this.knowledgeBase && this.knowledgeBase.rules && this.knowledgeBase.rules[specialty]) {
      const rules = this.knowledgeBase.rules[specialty];
      return `Reglas cl√≠nicas ${specialty}: ${rules.slice(0, 3).join(', ')}`;
    }
    return `Conocimiento cl√≠nico: ${specialty}`;
  }

  getChunkSpecificPrompt(chunkNumber, totalChunks) {
    return `Fragmento ${chunkNumber}/${totalChunks}`;
  }

  getOutputFormatPrompt() {
    return 'Formato: JSON estructurado fisioterap√©utico';
  }

  // üöÄ M√âTODOS PARA FLUJO COMPLETO - 3 FASES DE CONSULTA
  
  generateInitialAnalysisPrompt(transcription, specialty = 'physiotherapy') {
    const redFlags = this.getRedFlagsForSpecialty(specialty);
    const contraindicaciones = this.getContraindicationsForSpecialty(specialty);
    
    return `FASE 1: AN√ÅLISIS INICIAL - DETECCI√ìN DE BANDERAS ROJAS
Analiza como FISIOTERAPEUTA EXPERTO esta transcripci√≥n desordenada y detecta:

TRANSCRIPCI√ìN:
"""
${transcription}
"""

TAREAS ESPEC√çFICAS FASE 1:
1. BANDERAS ROJAS CR√çTICAS que requieren derivaci√≥n urgente
2. CONTRAINDICACIONES ABSOLUTAS para terapia manual
3. PREGUNTAS SUGERIDAS para obtener informaci√≥n faltante cr√≠tica
4. EVALUACI√ìN DE RIESGO inmediato

BANDERAS ROJAS CR√çTICAS:
${redFlags}

CONTRAINDICACIONES ABSOLUTAS:
${contraindicaciones}

RESPONDE SOLO CON JSON:
{
  "warnings": [
    {
      "severity": "HIGH|MEDIUM|LOW",
      "category": "red_flag|contraindication|referral",
      "title": "Bandera roja espec√≠fica",
      "description": "Explicaci√≥n cl√≠nica detallada",
      "action": "Acci√≥n inmediata requerida",
      "urgency": "immediate|urgent|routine"
    }
  ],
  "suggested_questions": [
    {
      "category": "safety|history|symptoms|examination",
      "question": "Pregunta espec√≠fica para obtener informaci√≥n cr√≠tica",
      "rationale": "Por qu√© esta pregunta es importante para la seguridad del paciente"
    }
  ],
  "risk_assessment": {
    "overall_risk": "HIGH|MEDIUM|LOW",
    "requires_referral": true,
    "safe_for_manual_therapy": false,
    "immediate_action_needed": "descripci√≥n de acci√≥n inmediata"
  }
}`;
  }

  generateIntegrationPrompt(transcription, specialty = 'physiotherapy', previousAnalysis, additionalInfo) {
    return `FASE 2: INTEGRACI√ìN DE INFORMACI√ìN ADICIONAL
Integra la informaci√≥n adicional obtenida con el an√°lisis previo:

TRANSCRIPCI√ìN ORIGINAL:
"""
${transcription}
"""

AN√ÅLISIS PREVIO:
${JSON.stringify(previousAnalysis, null, 2)}

INFORMACI√ìN ADICIONAL OBTENIDA:
"""
${additionalInfo}
"""

TAREAS ESPEC√çFICAS FASE 2:
1. ACTUALIZAR evaluaci√≥n de riesgo con nueva informaci√≥n
2. REFINAR banderas rojas y contraindicaciones
3. GENERAR recomendaciones espec√≠ficas de tratamiento
4. DETERMINAR protocolo de seguimiento

RESPONDE SOLO CON JSON:
{
  "updated_risk_assessment": {
    "overall_risk": "HIGH|MEDIUM|LOW",
    "risk_changes": "descripci√≥n de cambios en evaluaci√≥n de riesgo",
    "requires_referral": true,
    "referral_type": "urgent|routine|specialty",
    "referral_specialty": "rheumatology|neurology|orthopedics|other"
  },
  "treatment_recommendations": [
    {
      "category": "assessment|treatment|education|referral",
      "recommendation": "Recomendaci√≥n espec√≠fica fisioterap√©utica",
      "rationale": "Justificaci√≥n basada en hallazgos integrados",
      "priority": "HIGH|MEDIUM|LOW",
      "timeline": "immediate|short_term|long_term"
    }
  ],
  "follow_up_protocol": {
    "monitoring_needed": "descripci√≥n de monitoreo requerido",
    "red_flags_to_watch": ["se√±ales de alarma a vigilar"],
    "next_assessment_timeframe": "24h|48h|1week|2weeks"
  }
}`;
  }

  generateSOAPPrompt(transcription, specialty = 'physiotherapy', previousAnalysis, clinicalIntegration) {
    return `FASE 3: GENERACI√ìN SOAP FINAL ESTRUCTURADO
Genera un SOAP profesional y completo basado en toda la informaci√≥n integrada:

TRANSCRIPCI√ìN ORIGINAL:
"""
${transcription}
"""

AN√ÅLISIS INTEGRADO PREVIO:
${JSON.stringify(previousAnalysis, null, 2)}

INTEGRACI√ìN CL√çNICA: ${clinicalIntegration}

TAREAS ESPEC√çFICAS FASE 3:
1. ESTRUCTURAR informaci√≥n en formato SOAP profesional
2. SINTETIZAR hallazgos en evaluaci√≥n cl√≠nica coherente
3. GENERAR plan de tratamiento espec√≠fico y seguro
4. INCLUIR recomendaciones de seguimiento

RESPONDE SOLO CON JSON:
{
  "soap_note": {
    "subjective": {
      "chief_complaint": "motivo principal de consulta",
      "history_present_illness": "historia actual detallada",
      "relevant_history": "antecedentes relevantes",
      "patient_concerns": "preocupaciones espec√≠ficas del paciente"
    },
    "objective": {
      "examination_findings": "hallazgos de exploraci√≥n f√≠sica",
      "functional_assessment": "evaluaci√≥n funcional",
      "red_flags_identified": ["banderas rojas encontradas"],
      "contraindications_noted": ["contraindicaciones identificadas"]
    },
    "assessment": {
      "clinical_impression": "impresi√≥n cl√≠nica profesional",
      "differential_diagnosis": ["diagn√≥sticos diferenciales"],
      "prognosis": "pron√≥stico estimado",
      "risk_stratification": "estratificaci√≥n de riesgo"
    },
    "plan": {
      "immediate_actions": ["acciones inmediatas requeridas"],
      "treatment_plan": "plan de tratamiento espec√≠fico",
      "referrals_needed": ["derivaciones necesarias"],
      "follow_up_schedule": "cronograma de seguimiento",
      "patient_education": "educaci√≥n al paciente"
    }
  },
  "clinical_summary": {
    "key_findings": "hallazgos clave resumidos",
    "treatment_priority": "prioridad de tratamiento",
    "expected_outcomes": "resultados esperados",
    "safety_considerations": "consideraciones de seguridad"
  }
}`;
  }
}

module.exports = PromptFactory; 